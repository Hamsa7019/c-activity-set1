PS C:\Users\Manasa\Desktop\c-activity-set1> git add .
PS C:\Users\Manasa\Desktop\c-activity-set1> cd set01
PS C:\Users\Manasa\Desktop\c-activity-set1\set01> gcc -g -O0 problem11.c -o problem11.exe
>> 
PS C:\Users\Manasa\Desktop\c-activity-set1\set01>  gdb .\problem11.exe
GNU gdb (GDB) 7.6.1
Copyright (C) 2013 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "mingw32".
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>...
Reading symbols from C:\Users\Manasa\Desktop\c-activity-set1\set01\problem11.exe...done.
(gdb) b main
Breakpoint 1 at 0x40153c: file problem11.c, line 35.
(gdb) r
Starting program: C:\Users\Manasa\Desktop\c-activity-set1\set01/.\problem11.exe 
[New Thread 3556.0x31c8]
[New Thread 3556.0x6c8]

Breakpoint 1, main () at problem11.c:35
35          a=input_complex();
(gdb) s
input_complex () at problem11.c:13
13          printf("enter the real part\n");
(gdb) s
enter the real part
14          scanf("%f",&c.real);
(gdb) s
2
15          printf("enter the imaginary part\n");
(gdb) s
enter the imaginary part
16          scanf("%f",&c.imaginary);
(gdb) s
4
17          return c;
(gdb) n
18      }
(gdb) n
main () at problem11.c:36
36          b=input_complex();
(gdb) s
input_complex () at problem11.c:13
13          printf("enter the real part\n");
(gdb) s
enter the real part
14          scanf("%f",&c.real);
(gdb) s
4
15          printf("enter the imaginary part\n");
(gdb) s
enter the imaginary part
16          scanf("%f",&c.imaginary);
(gdb) s
6
17          return c;
(gdb) n
18      }
(gdb) n
main () at problem11.c:37
37          sum=add_complex(a,b);
(gdb) n
38          output(a,b,sum);
(gdb) p sum
$1 = {real = 6, imaginary = 10}
(gdb) n
 the complex a:2.000000+4.000000ithe complex of b:4.000000+6.000000ithe sum is 524288.126465+6.000000i39            return 0;
(gdb) n
40      }(gdb)